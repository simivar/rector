services:
    -
        class: Rector\PHPStanExtensions\Rule\RequireRectorCategoryByGetNodeTypesRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\PHPStanRules\Rules\PreventParentMethodVisibilityOverrideRule
        tags: [phpstan.rules.rule]

    -
         class: Rector\PHPStanExtensions\Rule\KeepRectorNamespaceForRectorRule
         tags: [phpstan.rules.rule]

    -
         class: Rector\PHPStanExtensions\Rule\ConfigurableRectorRule
         tags: [phpstan.rules.rule]

    -
         class: Rector\PHPStanExtensions\Rule\CheckGetNodeTypesReturnPhpParserNodeRule
         tags: [phpstan.rules.rule]

    -
         class: Rector\PHPStanExtensions\Rule\RectorRuleAndValueObjectHaveSameStartsRule
         tags: [phpstan.rules.rule]

    -
         class: Rector\PHPStanExtensions\Rule\CheckCodeSampleBeforeAfterAlwaysDifferentRule
         tags: [phpstan.rules.rule]

    - Rector\PHPStanExtensions\Utils\PHPStanValueResolver

    # $node->getAttribute($1) => Type|null by $1
    -
        class: Rector\PHPStanExtensions\ReturnTypeExtension\GetAttributeReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

    # ParsedNodesByType->getNodesByType($1) => $1[]
    -
        class: Rector\PHPStanExtensions\ReturnTypeExtension\ParsedNodesByTypeReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

    # $nameResolver->getName() => in some cases always string
    -
        class: Rector\PHPStanExtensions\ReturnTypeExtension\NameResolverReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
    # $nameResolverTrait->getName() => in some cases always string
    -
        class: Rector\PHPStanExtensions\ReturnTypeExtension\NameResolverTraitReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

    # $phpDocInfo->getByType($1) => Type|null by $1
    -
        class: Rector\PHPStanExtensions\ReturnTypeExtension\PhpDocInfoGetByTypeReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

    # node finder
    -
         class: Rector\PHPStanExtensions\ReturnTypeExtension\NodeFinder\FindFirstInstanceOfReturnTypeExtension
         tags: [phpstan.broker.dynamicMethodReturnTypeExtension]

    # $betterNodeFinder->findByInstance(..., $1) => $1[]
    -
        class: Rector\PHPStanExtensions\ReturnTypeExtension\NodeFinder\FindInstanceOfReturnTypeExtension
        tags: [phpstan.broker.dynamicMethodReturnTypeExtension]
